#pragma once

#include "typechange.h"
#include <stdlib.h>
#include <iostream>
#include <fstream>

#define LOCAL_HEADER 0x504b0304
#define CENTRALSIGNATURE 0x0504b0102
#define END_OF_CENTRAL 0x06054b50

//ヘッダーパラメーター
#define MAKEVERSION 0x2d //64bit標準 作成バージョン
#define VERSION_LH 0x14 //ローカルヘッダ　展開に必要なバージョン2byte（リトルエンディアン）
#define BITFLAG_LH 0x06 //ローカルヘッダ　ビットフラッグ2byte（リトルエンディアン） 0x14
#define DEFLATE_LH_CD 0x08//圧縮メソッド　デフレ―ト　2byte（リトルエンディアン）
#define NAIBU 0x0
#define GAIBU 0x0

struct CenterDerect {
    UINT64 pos;//読み取りおわり位置
    UINT16 version = 0;    //作成されたバージョン 2byte
    UINT16 minversion = 0;//展開に必要なバージョン (最小バージョン) 2byte
    UINT16 bitflag = 0;//汎用目的のビットフラグ 2byte
    UINT16 method = 0;//圧縮メソッド 2byte
    UINT16 time = 0;//ファイルの最終変更時間 2byte
    UINT16 day = 0;//ファイルの最終変更日付 2byte
    UINT32 crc = 0;//CRC-32 4byte
    UINT32 size = 0;//圧縮サイズ 4byte
    UINT32 nonsize = 0;//非圧縮サイズ 4byte
    UINT16 filenameleng = 0;//ファイル名の長さ (n) 2byte
    UINT16 fieldleng = 0;//拡張フィールドの長さ (m) 2byte
    UINT16 fielcomment = 0;//ファイルコメントの長さ (k) 2byte
    UINT16 discnum = 0;//ファイルが開始するディスク番号 2byte
    UINT16 zokusei = 0;//内部ファイル属性 2byte
    UINT32 gaibuzokusei = 0;//外部ファイル属性 4byte
    UINT32 localheader = 0;//ローカルファイルヘッダの相対オフセット 4byte
 
    char* filename = nullptr;//ファイル名 nbyte
    char* kakutyo = nullptr;//拡張フィールド mbyte
    char* comment = nullptr;//ファイルコメント kbyte
};

struct LocalHeader {
    UINT64 pos;//読み取りおわり位置
    UINT16 version = 0;    //展開に必要なバージョン (最小バージョン) 2byte
    UINT16 bitflag = 0;//汎用目的のビットフラグ 2byte
    UINT16 method = 0;//圧縮メソッド 2byte
    UINT16 time = 0;//ファイルの最終変更時間 2byte
    UINT16 day = 0;//ファイルの最終変更日付 2byte
    UINT32 crc = 0;//CRC-32 4byte
    UINT32 size = 0;//圧縮サイズ 4byte
    UINT32 nonsize = 0;//非圧縮サイズ 4byte
    UINT16 filenameleng = 0;//ファイル名の長さ (n) 2byte
    UINT16 fieldleng = 0;//拡張フィールドの長さ (m) 2byte
    char* filename = nullptr;//ファイル名 nbyte
    char* kakutyo = nullptr;//拡張フィールド mbyte
};

struct ENDrecord {
    UINT32 endsig = 0;

    UINT16 discnum = 0;    //このディスクの数 2byte
    UINT16 disccentral = 0;    //セントラルディレクトリが開始するディスク 2byte
    UINT16 centralnum = 0; //このディスク上のセントラルディレクトリレコードの数 2byte
    UINT16 centralsum = 0; //セントラルディレクトリレコードの合計数 2byte
    UINT32 size = 0;//セントラルディレクトリのサイズ (バイト) 4byte
    UINT32 position = 0;//セントラルディレクトリの開始位置のオフセット 4byte
    UINT16 commentleng = 0; //セントラルディレクトリレコードの合計数 2byte
    char* comment = nullptr;//ZIPファイルのコメント nbyte
};

class ReadZipHead {
public:
    CenterDerect* CH;
    LocalHeader* LH;
    ENDrecord* EH;
    std::ifstream* fin;


    ReadZipHead(std::ifstream* f);
    ~ReadZipHead();

    UINT64 readLocal(UINT64 p);
    UINT64 readEnd();
    UINT64 readCentral();
};